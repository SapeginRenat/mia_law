/**
 * This class is generated by jOOQ
 */
package ge.economy.law.model.tables;


import ge.economy.law.model.Keys;
import ge.economy.law.model.Public;
import ge.economy.law.model.tables.records.BoardRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * კოლეგია
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.7.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Board extends TableImpl<BoardRecord> {

    private static final long serialVersionUID = 79292238;

    /**
     * The reference instance of <code>public.board</code>
     */
    public static final Board BOARD = new Board();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BoardRecord> getRecordType() {
        return BoardRecord.class;
    }

    /**
     * The column <code>public.board.board_id</code>.
     */
    public final TableField<BoardRecord, Integer> BOARD_ID = createField("board_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

    /**
     * The column <code>public.board.name</code>.
     */
    public final TableField<BoardRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(300).nullable(false), this, "");

    /**
     * Create a <code>public.board</code> table reference
     */
    public Board() {
        this("board", null);
    }

    /**
     * Create an aliased <code>public.board</code> table reference
     */
    public Board(String alias) {
        this(alias, BOARD);
    }

    private Board(String alias, Table<BoardRecord> aliased) {
        this(alias, aliased, null);
    }

    private Board(String alias, Table<BoardRecord> aliased, Field<?>[] parameters) {
        super(alias, Public.PUBLIC, aliased, parameters, "კოლეგია");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BoardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BOARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BoardRecord> getPrimaryKey() {
        return Keys.BOARD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BoardRecord>> getKeys() {
        return Arrays.<UniqueKey<BoardRecord>>asList(Keys.BOARD_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Board as(String alias) {
        return new Board(alias, this);
    }

    /**
     * Rename this table
     */
    public Board rename(String name) {
        return new Board(name, null);
    }
}
